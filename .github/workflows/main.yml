name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build project
      run: pnpm build

    - name: Create new release
      id: create_release
      run: gh release create ${{ github.sha }} --notes "Automated release for commit ${{ github.sha }}"
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Remove old releases
      run: |
        gh release list --limit 100 --json tagName --jq '.[].tagName' | ForEach-Object {
          if ($_ -ne "${{ github.sha }}") {
            gh release delete $_ --yes
          }
        }
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Upload files to release
      run: |
        $files = Get-ChildItem -Path dist -Recurse -File | Where-Object { $_.FullName -notmatch 'package\.json' -and $_.FullName -notmatch 'installer\\' }
        foreach ($file in $files) {
          gh release upload ${{ steps.create_release.outputs.upload_url }} $file.FullName
        }
